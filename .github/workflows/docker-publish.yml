name: Build and Push Docker image to GHCR

on:
  push:
    tags:
      - '*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

concurrency:
  group: build_${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
        contents: write
        packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}

      - name: Get previous tag
        id: previoustag
        run: |
          PREV_TAG=$(git tag --sort=-creatordate | grep -v "${{ github.ref_name }}" | head -n 1)
          echo "Previous tag: $PREV_TAG"
          echo "previous_tag=$PREV_TAG" >> $GITHUB_OUTPUT

      - name: Generate commit changelog
        id: changelog
        run: |
            PREV_TAG="${{ steps.previoustag.outputs.previous_tag }}"
            echo "Previous tag: $PREV_TAG"
            CURR_TAG="${{ github.ref_name }}"
            if [ -z "$PREV_TAG" ]; then
                git log --pretty=format:'* %h: %s' $CURR_TAG | head -n 10 > commits.txt
            else
                git log --pretty=format:'* %h: %s' $PREV_TAG..$CURR_TAG | head -n 10 > commits.txt
            fi
            {
                echo 'changelog<<EOF'
                echo "$(cat commits.txt)"
                echo EOF
            } >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            ## Docker Image
            [View on GitHub Container Registry](https://github.com/hoang-rio/lux-grid-watcher/pkgs/container/lux-grid-watcher)
            
            Pull with:
            ```sh
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
            ```

            ### What's Changed
            ${{ steps.changelog.outputs.changelog }}

            **Full changelog**: https://github.com/hoang-rio/lux-grid-watcher/compare/${{ steps.previoustag.outputs.previous_tag }}...${{ github.ref_name }}
